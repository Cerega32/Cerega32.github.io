{"version":3,"sources":["components/change-card/change-card.js","components/card/Card.js","components/new-card/New-card.js","components/card-list/Card-list.js","components/app/App.js","index.js"],"names":["ChangeCard","state","displayColorPicker","color","r","props","g","b","a","handleClick","setState","handleClose","handleChange","rgb","onFinish","values","onChangeCard","id","card","name","type","cancelChange","this","className","style","borderRadius","width","margin","paddingTop","Item","label","rules","required","message","initialValue","marginBottom","onClick","background","onChange","htmlType","marginRight","SaveFilled","danger","CloseSquareFilled","Component","CardItem","change","onCancelChange","onCardDeleted","onMoveUp","onMoveDown","match","title","borderColor","minHeight","EditFilled","CaretUpFilled","CaretDownFilled","DeleteOutlined","NewCard","onCardAdded","padding","layout","CardList","cards","map","Card","App","localStorage","getItem","JSON","parse","addCard","newId","length","reduce","acc","curr","newArr","setItem","stringify","deleteCard","idx","findIndex","el","slice","moveUpCard","splice","moveDownCard","changeCard","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.757c52d5.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, Form, Input } from 'antd';\r\nimport { SketchPicker } from 'react-color'\r\n\r\nimport {\r\n  SaveFilled,\r\n  CloseSquareFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nclass ChangeCard extends Component {\r\n\r\n  \r\n\r\n  \r\n\r\n  state = {\r\n    \r\n    displayColorPicker: false,\r\n    color: {\r\n      r: this.props.r,\r\n      g: this.props.g,\r\n      b: this.props.b,\r\n      a: this.props.a,\r\n    },\r\n  };\r\n\r\n  \r\n\r\n  handleClick = () => {\r\n    this.setState({ displayColorPicker: !this.state.displayColorPicker })\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ displayColorPicker: false })\r\n  };\r\n\r\n  handleChange = (color) => {\r\n    this.setState({ color: color.rgb })\r\n  };\r\n\r\n\r\n  onFinish = (values) => {\r\n    this.props.onChangeCard({id: this.props.card.id, name: values.name, type: values.type, color: `rgba(${ this.state.color.r }, ${ this.state.color.g }, ${ this.state.color.b }, ${ this.state.color.a })`})\r\n    this.props.cancelChange()\r\n  };\r\n\r\n  render () {\r\n    const { card, cancelChange } = this.props;\r\n    \r\n    return (\r\n      <Form className='card-item new-card' onFinish={this.onFinish} style={{ borderRadius: '10px', width: '320px', margin: '0 15px 20px', paddingTop: '20px' }}>\r\n        <Form.Item\r\n          label=\"Name\"\r\n          name=\"name\"\r\n          rules={[{ required: true, message: 'Please input name' }]}\r\n          initialValue={card.name}\r\n          style={{ marginBottom: '15px' }}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Type\"\r\n          name=\"type\"\r\n          rules={[{ required: true, message: 'Please input type' }]}\r\n          initialValue={card.type}\r\n          style={{ marginBottom: '15px' }}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <div className='new-card__swatch' onClick={ this.handleClick }>\r\n          <div className='new-card__color' style={{ background: `rgba(${ this.state.color.r }, ${ this.state.color.g }, ${ this.state.color.b }, ${ this.state.color.a })` }} />\r\n        </div>\r\n        { this.state.displayColorPicker ? <div className='new-card__popover'>\r\n          <div className='new-card__cover' onClick={ this.handleClose }/>\r\n          <SketchPicker color={this.state.color} onChange={ this.handleChange } />\r\n        </div> : null }\r\n        <Form.Item >\r\n          <Button type=\"primary\" htmlType=\"submit\" style={{ marginRight: '10px' }}>\r\n            <SaveFilled />\r\n          </Button>\r\n          <Button type=\"primary\" danger onClick={() => cancelChange()}>\r\n            <CloseSquareFilled />\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ChangeCard\r\n","import React, { Component } from 'react';\r\n\r\nimport { Button, Card } from 'antd';\r\nimport './style.scss';\r\nimport ChangeCard from '../change-card/change-card';\r\nimport {\r\n  DeleteOutlined,\r\n  CaretUpFilled,\r\n  CaretDownFilled,\r\n  EditFilled\r\n} from '@ant-design/icons';\r\n\r\nclass CardItem extends Component {\r\n\r\n  state = {\r\n    change: false\r\n  }\r\n\r\n  handleChange = () => {\r\n    this.setState(() => {\r\n      return {change: true} \r\n    })\r\n  }\r\n\r\n  onCancelChange = () => {\r\n    this.setState(() => {\r\n      return {change: false} \r\n    })\r\n  }\r\n\r\n  render () {\r\n    const { change } = this.state;\r\n    const {card, onCardDeleted, onMoveUp, onMoveDown, onChangeCard} = this.props\r\n    if (change) {\r\n      const [r,g,b,a] = card.color.match(/[\\d\\.]+/g)\r\n      return (\r\n          <ChangeCard card={card} \r\n                      r={r} \r\n                      g={g} \r\n                      b={b}\r\n                      a={a}\r\n                      cancelChange={this.onCancelChange}\r\n                      onChangeCard={onChangeCard}\r\n          />\r\n      )\r\n    }\r\n    return (\r\n      <div className='card-item'>\r\n        <Card title={card.name} style={{ borderColor: card.color, borderRadius: '10px', marginBottom: '20px', minHeight: '200px' }}>\r\n          <p>{card.type}</p>\r\n          <div className='card-item__btns'>\r\n            <Button onClick={() => this.handleChange(card)} ><EditFilled /></Button>\r\n            <div className='card-item__btns--center'>\r\n              <Button onClick={() => onMoveUp(card.id)} style={{ marginRight: '10px' }}><CaretUpFilled /></Button>\r\n              <Button onClick={() => onMoveDown(card.id)} ><CaretDownFilled /></Button>\r\n            </div>\r\n            <Button onClick={() => onCardDeleted(card.id)} danger ><DeleteOutlined /></Button>\r\n          </div>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CardItem\r\n","import React, { Component } from 'react';\r\nimport { Button, Form, Input } from 'antd';\r\nimport { SketchPicker } from 'react-color'\r\n\r\n\r\n\r\nimport './style.scss';\r\n\r\nclass NewCard extends Component {\r\n\r\n  state = {\r\n    displayColorPicker: false,\r\n    color: {\r\n      r: '241',\r\n      g: '112',\r\n      b: '19',\r\n      a: '1',\r\n    },\r\n  };\r\n\r\n  \r\n\r\n  handleClick = () => {\r\n    this.setState({ displayColorPicker: !this.state.displayColorPicker })\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ displayColorPicker: false })\r\n  };\r\n\r\n  handleChange = (color) => {\r\n    this.setState({ color: color.rgb })\r\n  };\r\n\r\n  onFinish = (values) => {\r\n    this.props.onCardAdded({name: values.name, type: values.type, color: `rgba(${ this.state.color.r }, ${ this.state.color.g }, ${ this.state.color.b }, ${ this.state.color.a })`})\r\n  };\r\n\r\n    \r\n\r\n  render () {\r\n\r\n    \r\n    \r\n    return (\r\n      <Form className='new-card card-item' onFinish={this.onFinish} style={ {margin: '40px 0 30px', padding: '20px', borderRadius: '10px' } } layout=\"vertical\">\r\n        <Form.Item\r\n          label=\"Name\"\r\n          name=\"name\"\r\n          rules={[{ required: true, message: 'Please input name' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Type\"\r\n          name=\"type\"\r\n          rules={[{ required: true, message: 'Please input type' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <div className='new-card__swatch' onClick={ this.handleClick }>\r\n          <div className='new-card__color' style={{ background: `rgba(${ this.state.color.r }, ${ this.state.color.g }, ${ this.state.color.b }, ${ this.state.color.a })` }} />\r\n        </div>\r\n        { this.state.displayColorPicker ? <div className='new-card__popover'>\r\n          <div className='new-card__cover' onClick={ this.handleClose }/>\r\n          <SketchPicker color={this.state.color} onChange={ this.handleChange } />\r\n        </div> : null }\r\n        <Form.Item >\r\n          <Button type=\"primary\" htmlType=\"submit\" >\r\n            Add\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NewCard\r\n","import React from 'react';\r\nimport CardItem from '../card/Card';\r\nimport NewCard from '../new-card/New-card';\r\n\r\nimport './style.scss';\r\n\r\nconst CardList = ({ cards, onCardAdded, onCardDeleted, onMoveUp, onMoveDown, onChangeCard }) => {\r\n  return (\r\n    <div className='cards'>\r\n      <NewCard onCardAdded={onCardAdded} />\r\n      <div className='card-list'>\r\n        {cards.map((card) => {\r\n          return <CardItem \r\n                  card={card} \r\n                  key={card.id} \r\n                  onCardDeleted={onCardDeleted}\r\n                  onMoveUp={onMoveUp}\r\n                  onMoveDown={onMoveDown}\r\n                  onChangeCard={onChangeCard}/>\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList\r\n","import React, { Component } from 'react';\nimport CardList from '../card-list/Card-list';\nimport CardItem from '../card/Card';\n \nimport './App.css';\n\nclass App extends Component {\n\n  state = {\n    cards: localStorage.getItem('cards') ? JSON.parse(localStorage.getItem('cards')) : []\n  }\n\n  addCard = (card) => {\n    this.setState(({ cards }) => { \n      let newId = 0\n      if (cards.length) {\n        newId = cards.reduce((acc, curr) => acc.id > curr.id ? acc : curr).id;\n      }\n      const newArr = [\n        ...cards,\n        { id: newId + 1, ...card }\n      ];\n      localStorage.setItem(\"cards\", JSON.stringify(newArr))\n      return {\n        cards: newArr\n      }\n    } )    \n  };\n\n  deleteCard = (id) => {\n\t\tthis.setState(({ cards }) => {\n\t\t\tconst idx = cards.findIndex((el) => el.id === id);\n\n\t\t\tconst newArr = [\n\t\t\t\t...cards.slice(0, idx),\n\t\t\t\t...cards.slice(idx + 1)\n\t\t\t];\n      localStorage.setItem(\"cards\", JSON.stringify(newArr))\n\t\t\treturn {\n\t\t\t\tcards: newArr\n\t\t\t};\n\t\t});\n  };\n  \n  moveUpCard = (id) => {\n    this.setState(({ cards }) => {\n      const idx = cards.findIndex((el) => el.id === id);\n      if (idx === 0) {\n        return {\n          cards: [...cards.splice(1), cards[0]]\n        }\n      }\n\t\t\tconst newArr = [\n        ...cards.slice(0, idx - 1),\n        cards[idx],\n        cards[idx - 1],\n\t\t\t\t...cards.slice(idx + 1)\n\t\t\t];\n      localStorage.setItem(\"cards\", JSON.stringify(newArr))\n\t\t\treturn {\n\t\t\t\tcards: newArr\n\t\t\t};\n\t\t});\n  }\n\n  moveDownCard = (id) => {\n    this.setState(({ cards }) => {\n      const idx = cards.findIndex((el) => el.id === id);\n      if (idx + 1 === cards.length) {\n        return {\n          cards: [cards[idx], ...cards.slice(0, idx)]\n        }\n      }\n\t\t\tconst newArr = [\n        ...cards.slice(0, idx),\n        cards[idx + 1],\n        cards[idx],\n\t\t\t\t...cards.slice(idx + 2)\n\t\t\t];\n      localStorage.setItem(\"cards\", JSON.stringify(newArr))\n\t\t\treturn {\n\t\t\t\tcards: newArr\n\t\t\t};\n\t\t});\n  }\n\n  changeCard = (card) => {\n    this.setState(({ cards }) => {\n      const idx = cards.findIndex((el) => el.id === card.id);\n      const newArr = [\n        ...cards.slice(0, idx),\n        card,\n        ...cards.slice(idx + 1)\n      ];\n      localStorage.setItem(\"cards\", JSON.stringify(newArr))\n      return {\n        cards: newArr\n      };\n    });\n  }\n\n\n  render() {\n\n    const { cards } = this.state;\n\n    return (\n      <div>\n        <CardList cards={cards} \n                  onCardAdded={this.addCard}\n                  onCardDeleted={this.deleteCard}\n                  onMoveUp={this.moveUpCard}\n                  onMoveDown={this.moveDownCard}\n                  onChangeCard={this.changeCard}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app/App';\n\nimport './index.css';\nimport 'antd/dist/antd.css';\n\n\nReactDOM.render(<App />,  document.getElementById('root'));\n"],"sourceRoot":""}